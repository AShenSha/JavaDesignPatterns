模板方法模式的优点
    1.在父类中形式化的定义一个算法,而由他的子类来实现细节的处理,在子类实现详细的处理方法时并不会改变算法中步骤的执行顺序
    2.模板方法模式是一种代码复用技术,它在类库的设计中尤为重要.它提取了类库中公共的行为,将公共行为放在父类中.
    3.可实现一种反向控制结构,通过子类覆盖父类的钩子方法类决定某一特定步骤是否需要执行
    4.在模板方法模式中可以通过子类来覆盖父类的基本方法,不同的子类可以提供基本方法的不同实现,更换和增加新的子类很方便,符合单一职责原则和开闭原则
缺点
    1.需要为每一个基本方法的不同实现定义一个子类,如果父类中可变的基本方法太多,将会导致类的个数增加,系统更加庞大,设计也更加抽象,此时,可以结合桥接模式进行设计
与状态模式的不同
    1.状态模式与策略模式类似,并且都是能够动态改变对象的行为.但是状态模式是通过状态转移来改变Context所组合的Sate对象
      而策略模式是通过Context本身的决策来改变组合的strategy对象.所谓的状态转移，是指 Context 在运行过程中由于一些条件发生改变而使得 State 对象发生改变，注意必须要是在运行过程中。
    2.状态模式主要是用来解决状态转移的问题，当状态发生转移了，那么 Context 对象就会改变它的行为；
      而策略模式主要是用来封装一组可以互相替代的算法族，并且可以根据需要动态地去替换 Context 使用的算法。
适用场景
    1.对一些复杂的算法进行分割,将其算法中固定不变的部分设计为模板方法和父类具体方法,而一些可改变的细节由子类实现
    2.各子类中公共的行为应被提取出来并集中到一个公共父类中以避免代码重复
    3.需要通过子类决定父类中某个步骤是否执行,实现子类对父类的反向控制